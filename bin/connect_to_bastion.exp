connect_to_bastion.sh
#!/usr/bin/expect -f
echo "$0"
echo "$1"
exit 0
# 设置超时时间为60秒，根据需要调整
set timeout 60

# 设置堡垒机用户名和密码
set username "wb-zxy437642"
# 从外部文件中读取密码 echo "your_secure_password" > ~/.bastion_password   chmod 600 ~/.bastion_password
set password_file "~/.bastion_password"
set password [read [open $password_file]]
# 设置堡垒机地址
set bastion_dev "bastion.antbank.com.cn"
set bastion_alg "bastion.antlending.com.hk"
set bastion_sg "bastion.anext.com.sg"
set bastion_hk "bastion.antbank.hk"
set bastion_mo "bastion.antbank.mo"
# 定义一个连接堡垒机的方法
proc connect_bastion {user host port} {
    global password
    spawn ssh -o StrictHostKeyChecking=no -o HostKeyAlgorithms=+ssh-rsa ${user}@${host} -p ${port}
    while {1} {
        expect {
            "yes/no" {
                send "yes\r"
                exp_continue
            }
            "*assword:" {
                send "$password\r"
                exp_continue
            }
            "Please Input Mfa Code (Email)" {
                send_user "请输入您的MFA验证码: "
                # 等待用户输入MFA验证码
                expect_user -re "(.*)\n"
                # 将用户输入的验证码发送给ssh
                send "$expect_out(1,string)\r"
                exp_continue
            }
            "name-des" {
                send_user "\n已进入 name-des 提示，等待用户操作...\n"
                interact
                return
            }
            "name-desc" {
                send_user "\n已进入 name-desc 提示，等待用户操作...\n"
                interact
                return
            }
            -re {.*\$ } {
                send_user "\n登录成功！\n"
                interact
                return
            }
            eof {
                catch wait result
                exit [lindex $result 3]
            }
            timeout {
                send_user "\n连接超时，请检查您的网络连接或堡垒机状态。\n"
                exit 1
            }
        }
    }
}

# 菜单选项
puts "\n请选择要连接的堡垒机环境:"
puts "1. 开发测试环境"
puts "2. ALG生产环境"
puts "3. SG生产环境"
puts "4. HK生产环境"
puts "5. MO生产环境"
puts -nonewline "请输入对应的数字："
flush stdout
# 获取用户输入
gets stdin option
# 根据选择的选项连接到不同的堡垒机
switch -- $option {
    "1" {
        connect_bastion $username $bastion_dev 60022
    }
    "2" {
        connect_bastion $username $bastion_alg 60022
    }
    "3" {
        connect_bastion $username $bastion_sg 60022
    }
    "4" {
        connect_bastion $username $bastion_hk 60022
    }
    "5" {
        connect_bastion $username $bastion_mo 60022
    }
    default {
        send_user "\n无效选项，请重新运行脚本。\n"
        exit 1
    }
}